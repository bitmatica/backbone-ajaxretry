/*!
 * Backbone.js ajaxRetry
 * https://github.com/gdibble/backbone-ajaxretry
 * Copyright 2014 Gabriel Dibble; Licensed MIT
 */
!function(define){define(function(require,exports,module){"use strict";function setOptions(e){_.defaults(e,settings),settings=e}function exponentialDelay(e){return 1e3*(Math.pow(settings.base,e)-settings.y)}function exhausted(){var e=Array.prototype.slice.call(arguments,0);_.extend(e[0],this),this.hasOwnProperty("exhaust")&&this.exhaust.apply(this,e)}function ajaxRetry(e){var t=this;this.hasOwnProperty("retries")?(this.recursed=void 0===this.recursed?0:this.recursed+1,e&&e.status<500||this.recursed>=this.retries?exhausted.apply(t,arguments):this.recursed<this.retries&&setTimeout(function(){$.ajax(t)},exponentialDelay(this.recursed))):exhausted.apply(t,arguments)}function extender(e,t){_.extend(e[0],t?t:{},{retries:settings.retryCount,error:function(){ajaxRetry.apply(this,arguments)}})}function sliceArguments(){return Array.prototype.slice.call(arguments,0)}var _$ajax,Backbone=require("backbone"),_=require("underscore"),settings={base:2.718281828,y:.25,retryCount:3,onlyBackbone:!1};settings.onlyBackbone?Backbone.ajax=function(e){var t=sliceArguments(arguments);return extender(t,e),Backbone.$.ajax.apply(Backbone.$,t)}:(_$ajax=$.ajax,$.ajax=function(e){var t=sliceArguments(arguments);return extender(t,e),_$ajax.apply($,t)}),module.exports={set:setOptions}})}("function"==typeof define&&define.amd?define:function(factory){factory(require,exports,module)});
